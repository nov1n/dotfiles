#!/usr/bin/env bash

set -eo pipefail

# Set new line and tab for word splitting
IFS=$'\n\t'

# Check if argument is provided
if [ $# -ne 1 ]; then
  echo "Usage: $0 <file/directory>"
  exit 1
fi

# Read the full path of the source file
SOURCE=$(readlink -f "$1")

# Check if source exists
if [ ! -e "$SOURCE" ]; then
  echo "Error: $SOURCE does not exist"
  exit 1
fi

# Get the relative path from HOME to preserve directory structure
HOME_PATH=$(readlink -f "$HOME")
if [[ "$SOURCE" == "$HOME_PATH"/* ]]; then
  # Remove HOME path prefix to get relative path
  RELATIVE_PATH="${SOURCE#"$HOME_PATH"/}"
  DOTFILES_PATH="$DOTFILES_HOME/$RELATIVE_PATH"
else
  echo "Error: $SOURCE is not within the home directory"
  exit 1
fi

# Check if the file already exists in the dotfiles directory
if [ -e "$DOTFILES_PATH" ]; then
  echo "$RELATIVE_PATH already exists in dotfiles"
  exit 0
fi

# Create parent directories if needed
mkdir -p "$(dirname "$DOTFILES_PATH")"

# Move to dotfiles
mv "$SOURCE" "$DOTFILES_PATH"

# Use Stow to create the symlink in the home directory
cd "$DOTFILES_HOME"
stow -v .

echo "Successfully added $RELATIVE_PATH to dotfiles and created symlink using Stow"
